{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar dispatchArr = [];\nvar slice = createSlice({\n  name: 'recepie',\n  initialState: JSON.parse(sessionStorage.getItem('foodData')) || [],\n  reducers: {\n    stateChange: (state, action) => {\n      // console.log(JSON.parse(sessionStorage.getItem('foodData')))\n      if (dispatchArr.length == 0) {\n        dispatchArr.push(action.payload.formjson);\n      } else {\n        dispatchArr.filter(value => {\n          console.log(value);\n          if (value.id != action.payload.formjson.id) {\n            dispatchArr.push(action.payload.formjson);\n          }\n        });\n        // ;\n      }\n      console.log(dispatchArr);\n    }\n  }\n});\nexport var {\n  stateChange\n} = slice.actions;\nexport var expreducer = slice.reducer;","map":{"version":3,"names":["createSlice","dispatchArr","slice","name","initialState","JSON","parse","sessionStorage","getItem","reducers","stateChange","state","action","length","push","payload","formjson","filter","value","console","log","id","actions","expreducer","reducer"],"sources":["D:/reactlearn/product/product/src/slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nvar dispatchArr=[];\r\nvar slice=createSlice({\r\n    name : 'recepie',\r\n    initialState:JSON.parse(sessionStorage.getItem('foodData')) ||[] ,\r\n    reducers:{\r\n        stateChange:(state,action)=>{\r\n            // console.log(JSON.parse(sessionStorage.getItem('foodData')))\r\n            if(dispatchArr.length == 0){\r\n                dispatchArr.push(action.payload.formjson);\r\n            }\r\n            else{\r\n                dispatchArr.filter((value)=>{\r\n                    console.log(value);\r\n                    if(value.id != action.payload.formjson.id){\r\n                        dispatchArr.push(action.payload.formjson);\r\n                    }\r\n                })\r\n                // ;\r\n            }\r\n            \r\n  \r\n        console.log(dispatchArr)\r\n    }}\r\n}) \r\n\r\nexport var {stateChange}=slice.actions\r\nexport var expreducer=slice.reducer\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,IAAIC,WAAW,GAAC,EAAE;AAClB,IAAIC,KAAK,GAACF,WAAW,CAAC;EAClBG,IAAI,EAAG,SAAS;EAChBC,YAAY,EAACC,IAAI,CAACC,KAAK,CAACC,cAAc,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAG,EAAE;EAChEC,QAAQ,EAAC;IACLC,WAAW,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACxB;MACA,IAAGX,WAAW,CAACY,MAAM,IAAI,CAAC,EAAC;QACvBZ,WAAW,CAACa,IAAI,CAACF,MAAM,CAACG,OAAO,CAACC,QAAQ,CAAC;MAC7C,CAAC,MACG;QACAf,WAAW,CAACgB,MAAM,CAAEC,KAAK,IAAG;UACxBC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;UAClB,IAAGA,KAAK,CAACG,EAAE,IAAIT,MAAM,CAACG,OAAO,CAACC,QAAQ,CAACK,EAAE,EAAC;YACtCpB,WAAW,CAACa,IAAI,CAACF,MAAM,CAACG,OAAO,CAACC,QAAQ,CAAC;UAC7C;QACJ,CAAC,CAAC;QACF;MACJ;MAGJG,OAAO,CAACC,GAAG,CAACnB,WAAW,CAAC;IAC5B;EAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAI;EAACS;AAAW,CAAC,GAACR,KAAK,CAACoB,OAAO;AACtC,OAAO,IAAIC,UAAU,GAACrB,KAAK,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}