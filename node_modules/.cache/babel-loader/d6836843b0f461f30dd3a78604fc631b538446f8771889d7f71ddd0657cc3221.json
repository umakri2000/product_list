{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar dispatchArr = [];\nvar idArr = [];\nvar slice = createSlice({\n  name: 'recepie',\n  initialState: [],\n  reducers: {\n    stateChange: (state, action) => {\n      // alert('l')\n      // console.log(JSON.parse(JSON.stringify(JSON.parse(state))));\n      var getState = [...state];\n      if (getState.length == 0) {\n        getState.push(action.payload.formjson);\n        return getState;\n      }\n      // else{\n      //     // var temp=[]\n      //     var filterState=getState.map((val)=> {\n      //         console.log(getState.length)\n      //         console.log(val.id);\n      //         console.log(action.payload.formjson.id);\n      //         if(val.id == action.payload.formjson.id){\n      //             return val\n\n      //         }\n      //         else{\n      //             // return action.payload.formjson\n      //             getState.push(action.payload.formjson);\n      //             console.log(JSON.parse(JSON.stringify(getState)))\n      //             return getState\n\n      //         }\n\n      //      });\n      //      console.log('filterState....',JSON.parse(JSON.stringify([...filterState])))\n      //      return [...filterState]\n      // //                 const filterState = getState.filter((val) => val.id !== action.payload.formjson.id);\n      // // filterState.push(action.payload.formjson);\n      // // return filterState;\n\n      // }\n\n      // getState.push(filterState);\n\n      const filterState = getState.map(val => {\n        console.log(getState.length);\n        console.log(val.id);\n        console.log(action.payload.formjson.id);\n        if (val.id === action.payload.formjson.id) {\n          // If the IDs match, return the existing item\n          return val;\n        } else {\n          // If the IDs don't match, don't modify the original array\n          return action.payload.formjson;\n        }\n      });\n\n      // Check if the item with the `id` exists\n      if (!getState.some(val => val.id === action.payload.formjson.id)) {\n        filterState.push(action.payload.formjson); // Add to the result if it doesn't exist\n      }\n      return filterState;\n    }\n  }\n});\nexport var {\n  stateChange\n} = slice.actions;\nexport var expreducer = slice.reducer;","map":{"version":3,"names":["createSlice","dispatchArr","idArr","slice","name","initialState","reducers","stateChange","state","action","getState","length","push","payload","formjson","filterState","map","val","console","log","id","some","actions","expreducer","reducer"],"sources":["D:/reactlearn/product/product/src/slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nvar dispatchArr=[];\r\nvar idArr=[];\r\nvar slice=createSlice({\r\n    name : 'recepie',\r\n    initialState:[] ,\r\n    reducers:{\r\n        stateChange:(state,action)=>{\r\n            \r\n// alert('l')\r\n            // console.log(JSON.parse(JSON.stringify(JSON.parse(state))));\r\n            var getState=[...state];\r\n            if(getState.length ==0){\r\n                getState.push(action.payload.formjson);\r\n              return  getState \r\n\r\n            }\r\n            // else{\r\n            //     // var temp=[]\r\n            //     var filterState=getState.map((val)=> {\r\n            //         console.log(getState.length)\r\n            //         console.log(val.id);\r\n            //         console.log(action.payload.formjson.id);\r\n            //         if(val.id == action.payload.formjson.id){\r\n            //             return val\r\n  \r\n            //         }\r\n            //         else{\r\n            //             // return action.payload.formjson\r\n            //             getState.push(action.payload.formjson);\r\n            //             console.log(JSON.parse(JSON.stringify(getState)))\r\n            //             return getState\r\n                        \r\n            //         }\r\n                    \r\n            //      });\r\n            //      console.log('filterState....',JSON.parse(JSON.stringify([...filterState])))\r\n            //      return [...filterState]\r\n            // //                 const filterState = getState.filter((val) => val.id !== action.payload.formjson.id);\r\n            // // filterState.push(action.payload.formjson);\r\n            // // return filterState;\r\n\r\n            // }\r\n            \r\n            // getState.push(filterState);\r\n            \r\n            const filterState = getState.map((val) => {\r\n                console.log(getState.length);\r\n                console.log(val.id);\r\n                console.log(action.payload.formjson.id);\r\n              \r\n                if (val.id === action.payload.formjson.id) {\r\n                  // If the IDs match, return the existing item\r\n                  return val;\r\n                } else {\r\n                  // If the IDs don't match, don't modify the original array\r\n                  return action.payload.formjson;\r\n                }\r\n              });\r\n              \r\n              // Check if the item with the `id` exists\r\n              if (!getState.some((val) => val.id === action.payload.formjson.id)) {\r\n                filterState.push(action.payload.formjson); // Add to the result if it doesn't exist\r\n              }\r\n\r\n            return filterState\r\n  \r\n      \r\n    }}\r\n}) \r\n\r\nexport var {stateChange}=slice.actions\r\nexport var expreducer=slice.reducer\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,IAAIC,WAAW,GAAC,EAAE;AAClB,IAAIC,KAAK,GAAC,EAAE;AACZ,IAAIC,KAAK,GAACH,WAAW,CAAC;EAClBI,IAAI,EAAG,SAAS;EAChBC,YAAY,EAAC,EAAE;EACfC,QAAQ,EAAC;IACLC,WAAW,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MAEpC;MACY;MACA,IAAIC,QAAQ,GAAC,CAAC,GAAGF,KAAK,CAAC;MACvB,IAAGE,QAAQ,CAACC,MAAM,IAAG,CAAC,EAAC;QACnBD,QAAQ,CAACE,IAAI,CAACH,MAAM,CAACI,OAAO,CAACC,QAAQ,CAAC;QACxC,OAAQJ,QAAQ;MAElB;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;;MAEA;;MAEA;MACA;MACA;MACA;MACA;MACA;;MAEA;;MAEA;;MAEA,MAAMK,WAAW,GAAGL,QAAQ,CAACM,GAAG,CAAEC,GAAG,IAAK;QACtCC,OAAO,CAACC,GAAG,CAACT,QAAQ,CAACC,MAAM,CAAC;QAC5BO,OAAO,CAACC,GAAG,CAACF,GAAG,CAACG,EAAE,CAAC;QACnBF,OAAO,CAACC,GAAG,CAACV,MAAM,CAACI,OAAO,CAACC,QAAQ,CAACM,EAAE,CAAC;QAEvC,IAAIH,GAAG,CAACG,EAAE,KAAKX,MAAM,CAACI,OAAO,CAACC,QAAQ,CAACM,EAAE,EAAE;UACzC;UACA,OAAOH,GAAG;QACZ,CAAC,MAAM;UACL;UACA,OAAOR,MAAM,CAACI,OAAO,CAACC,QAAQ;QAChC;MACF,CAAC,CAAC;;MAEF;MACA,IAAI,CAACJ,QAAQ,CAACW,IAAI,CAAEJ,GAAG,IAAKA,GAAG,CAACG,EAAE,KAAKX,MAAM,CAACI,OAAO,CAACC,QAAQ,CAACM,EAAE,CAAC,EAAE;QAClEL,WAAW,CAACH,IAAI,CAACH,MAAM,CAACI,OAAO,CAACC,QAAQ,CAAC,CAAC,CAAC;MAC7C;MAEF,OAAOC,WAAW;IAG1B;EAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAI;EAACR;AAAW,CAAC,GAACJ,KAAK,CAACmB,OAAO;AACtC,OAAO,IAAIC,UAAU,GAACpB,KAAK,CAACqB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}