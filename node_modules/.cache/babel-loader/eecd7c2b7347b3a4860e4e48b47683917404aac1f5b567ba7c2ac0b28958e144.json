{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nvar dispatchArr = [];\nvar idArr = [];\nvar slice = createSlice({\n  name: 'recepie',\n  initialState: [{\n    name: 'uu'\n  }],\n  reducers: {\n    stateChange: (state, action) => {\n      console.log(JSON.parse(JSON.stringify(state)));\n      console.log(action.payload.formjson);\n      var getAddedItems = state.items.filter(items => {\n        if (items.id == action.payload.formjson.id) {\n          return {\n            ...items\n          };\n        }\n        console.log('khbb', JSON.parse(JSON.stringify(getAddedItems)));\n      });\n      return {\n        ...state,\n        items: getAddedItems\n      };\n    }\n  }\n});\nexport var {\n  stateChange\n} = slice.actions;\nexport var expreducer = slice.reducer;","map":{"version":3,"names":["createSlice","dispatchArr","idArr","slice","name","initialState","reducers","stateChange","state","action","console","log","JSON","parse","stringify","payload","formjson","getAddedItems","items","filter","id","actions","expreducer","reducer"],"sources":["D:/reactlearn/product/product/src/slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nvar dispatchArr=[];\r\nvar idArr=[];\r\nvar slice=createSlice({\r\n    name : 'recepie',\r\n    initialState:[{name:'uu'}] ,\r\n    reducers:{\r\n        stateChange:(state,action)=>{\r\n            console.log(JSON.parse(JSON.stringify(state)));\r\n            console.log(action.payload.formjson);\r\n            var getAddedItems=state.items.filter((items)=>{\r\n               if(items.id == action.payload.formjson.id){\r\n                return {...items} \r\n               \r\n               }\r\n               console.log('khbb',JSON.parse(JSON.stringify(getAddedItems)));\r\n            })\r\n            return {...state,items:getAddedItems}\r\n           \r\n    }}\r\n}) \r\n\r\nexport var {stateChange}=slice.actions\r\nexport var expreducer=slice.reducer\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,IAAIC,WAAW,GAAC,EAAE;AAClB,IAAIC,KAAK,GAAC,EAAE;AACZ,IAAIC,KAAK,GAACH,WAAW,CAAC;EAClBI,IAAI,EAAG,SAAS;EAChBC,YAAY,EAAC,CAAC;IAACD,IAAI,EAAC;EAAI,CAAC,CAAC;EAC1BE,QAAQ,EAAC;IACLC,WAAW,EAACA,CAACC,KAAK,EAACC,MAAM,KAAG;MACxBC,OAAO,CAACC,GAAG,CAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACN,KAAK,CAAC,CAAC,CAAC;MAC9CE,OAAO,CAACC,GAAG,CAACF,MAAM,CAACM,OAAO,CAACC,QAAQ,CAAC;MACpC,IAAIC,aAAa,GAACT,KAAK,CAACU,KAAK,CAACC,MAAM,CAAED,KAAK,IAAG;QAC3C,IAAGA,KAAK,CAACE,EAAE,IAAIX,MAAM,CAACM,OAAO,CAACC,QAAQ,CAACI,EAAE,EAAC;UACzC,OAAO;YAAC,GAAGF;UAAK,CAAC;QAElB;QACAR,OAAO,CAACC,GAAG,CAAC,MAAM,EAACC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACG,aAAa,CAAC,CAAC,CAAC;MAChE,CAAC,CAAC;MACF,OAAO;QAAC,GAAGT,KAAK;QAACU,KAAK,EAACD;MAAa,CAAC;IAE7C;EAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAI;EAACV;AAAW,CAAC,GAACJ,KAAK,CAACkB,OAAO;AACtC,OAAO,IAAIC,UAAU,GAACnB,KAAK,CAACoB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}